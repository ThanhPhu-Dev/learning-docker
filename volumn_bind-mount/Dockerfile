FROM node:18
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
CMD ["npm", "start"]


# docker build -t volume-demo .
# B∆∞·ªõc 4: Ch·∫°y v·ªõi volume
# docker volume create my-vol
# docker run --rm -v my-vol:/data volume-demo
# ki·ªÉm tra: 
# docker run -it --rm -v my-vol:/data alpine sh
# cat /data/file.txt
# B∆∞·ªõc 5: Ch·∫°y l·∫°i nh∆∞ng v·ªõi bind mount
# mkdir host-data
# docker run --rm -v $(pwd)/host-data:/data volume-demo





# B√†i 9:
#     | Lo·∫°i           | ƒê·∫∑c ƒëi·ªÉm ch√≠nh                               | D√πng khi n√†o                         |
#     | -------------- | -------------------------------------------- | ------------------------------------ |
#     | **Volume**     | Docker qu·∫£n l√Ω, n·∫±m trong `/var/lib/docker`  | D√πng ph·ªï bi·∫øn trong production       |
#     | **Bind mount** | Tr·ªè th·∫≥ng v√†o 1 th∆∞ m·ª•c c·ª• th·ªÉ tr√™n m√°y host | D·ªÖ debug, d√πng trong ph√°t tri·ªÉn      |
#     | **tmpfs**      | RAM only, d·ªØ li·ªáu m·∫•t khi container t·∫Øt      | D√πng t·∫°m th·ªùi, b·∫£o m·∫≠t (v√≠ d·ª• token) |
    
#     1. Bind Mount (g·∫Øn th∆∞ m·ª•c m√°y th·∫≠t)
#         docker run -v $(pwd)/data:/app/data my-image
#     Ch√∫ th√≠ch:
#     $(pwd)/data l√† th∆∞ m·ª•c tr√™n m√°y th·∫≠t
    
#     /app/data l√† th∆∞ m·ª•c b√™n trong container
    
#     üìå Th√≠ch h·ª£p khi dev, v√¨ b·∫°n c√≥ th·ªÉ edit file tr√™n m√°y th·∫≠t v√† th·∫•y thay ƒë·ªïi ngay.
    
#     2. Volume (do Docker t·∫°o v√† qu·∫£n l√Ω)
    
#         docker volume create my-data
#         docker run -v my-data:/app/data my-image
#     Ch√∫ th√≠ch:
#     D·ªØ li·ªáu n·∫±m trong /var/lib/docker/volumes/my-data/_data
    
#     An to√†n, t√°ch bi·ªát ‚Üí d√πng trong production
    